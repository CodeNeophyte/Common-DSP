desc:sault/fac :: oversampler tester

//https://github.com/FredAntonCorvest/Common-DSP/tree/OversampleTest/Oversample/Misc/Reaper%20Oversample%20Test%20Project

// WARNING!!!
// THIS TEST MAY BE INACURATE OR COMPLETELY WRONG
// DO NOT JUDGE THE ST OVERSAMPLER BASED ON THE RESULT PROVIDED BY THIS TEST!!!

slider1:0<0,10,1{1x (none),2x(Up sampling only),3x(Up sampling only),4x(Up sampling only),2x-2x,3x-3x,4x-4x,8x-8x,8x-8x(MinPhase),4x-2xCascade,8x-2xCascade}> Filter to test
slider2:0<0,1,1{OSC,AUDIO}> Source
slider3:1000<20,20000,1>OSC Freq (Hz)
slider4:15<1,100,1> OSC # harmonics
slider5:0<0,2,1{ALL,ODD ONLY}> OSC harmonic type
slider6:.5<0,1,.01> Level
slider7:0<0,2,1{Dry,Hard Clip, ATan WaveShaper}> Fx

import st-oversampler.jsfx-inc

@init

gen.level = .5;
osc.ph = 0;
counter = 0;
twopi = 2 * $pi;

function Osc() instance(y,dt,ph,nbHarmonics,stepHarmonics) (
  y = 0;
  a = ph*twopi;
  step = 1;
  while (step <= nbHarmonics) (     
    y += sin(a*step)/step;
    step += stepHarmonics;    
  ); 
  ph += dt; 
  ph >= 1 ? ph -= 1;
  y;
);

function HardClip(x) (
  abs(x) > .5 ? sign(x) * .5 : x;
);

function WaveShaper(x) (
  atan(x) * .5 * $pi;
);

function FxChain(x)(
  slider7 == 0 ? (
    x;
  ) :

  slider7 == 1 ? ( 
    HardClip(x);
  ) :
  
  slider7 == 2 ? ( 
    WaveShaper(x);
  );  
);

function Gen() instance(level) (
  slider2 == 0 ? (
    osc.Osc() * level;
  ) :
  
  slider2 == 1 ? (
    ((spl0 + spl1) * .5) * level;
  );
);

@slider

slider1 ==  0 ? factor = 1;
slider1 ==  1 ? factor = 1/2;
slider1 ==  2 ? factor = 1/3;
slider1 ==  3 ? factor = 1/4;
slider1 ==  4 ? factor = 1;
slider1 ==  5 ? factor = 1;
slider1 ==  6 ? factor = 1;
slider1 ==  7 ? factor = 1;
slider1 ==  8 ? factor = 1;
slider1 ==  9 ? factor = 1;
slider1 == 10 ? factor = 1;

osc.sr = srate*factor;
osc.dt = slider3/osc.sr;
osc.nbHarmonics = slider4;
osc.stepHarmonics = slider5+1;
gen.level = slider6;

@sample

slider1 == 0 ? (
//1x (none)
  spl0 = spl1 = FxChain(Gen());
  counter = 0;
  );

slider1 == 1 ? (
//2x(Up sampling only)
  counter == 0 ? (
    os0.os_up2(Gen());
    spl0 = spl1 = FxChain(os0.y1);
    ) : (
    spl0 = spl1 = FxChain(os0.y0);
    );

    counter += 1;
    counter >= 2 ? counter = 0;
    );
    
slider1 == 2 ? (
//3x(Up sampling only)
  counter == 0 ? (
    os5.os_up3(Gen());
    
    spl0 = spl1 = FxChain(os5.y2);
    );

  counter == 1 ? ( spl0 = spl1 = FxChain(os5.y1); );
  counter == 2 ? ( spl0 = spl1 = FxChain(os5.y0); );

  counter += 1;
  counter >= 3 ? counter -= 3;
  );    

slider1 == 3 ? (
//4x(Up sampling only)
  counter == 0 ? (
    os1.os_up4(Gen());

    spl0 = spl1 = FxChain(os1.y3);
    );

  counter == 1 ? ( spl0 = spl1 = FxChain(os1.y2); );
  counter == 2 ? ( spl0 = spl1 = FxChain(os1.y1); );
  counter == 3 ? ( spl0 = spl1 = FxChain(os1.y0); );

  counter += 1;
  counter >= 4 ? counter = 0;
  );
  
slider1 == 4 ? (
//2x-2x
  os0.os_up2(Gen());
  os0.y1 = FxChain(os0.y1);
  os0.y0 = FxChain(os0.y0);
  spl0 = spl1 = os0.os_down2();

  );
  
slider1 == 5 ? (
//3x-3x
  os6.os_up3(Gen());
  os6.y2 = FxChain(os6.y2);
  os6.y1 = FxChain(os6.y1);
  os6.y0 = FxChain(os6.y0);  
  spl0 = spl1 = os6.os_down3();

  );  
  
slider1 == 6 ? (
//4x-4x
  os4.os_up4(Gen());
  os4.y3 = FxChain(os4.y3);
  os4.y2 = FxChain(os4.y2);
  os4.y1 = FxChain(os4.y1);
  os4.y0 = FxChain(os4.y0);  
  spl0 = spl1 = os4.os_down4();

  );
  
slider1 == 7 ? (
//8x-8x
  os8.os_up8(Gen());
  os8.y7 = FxChain(os8.y7);
  os8.y6 = FxChain(os8.y6);
  os8.y5 = FxChain(os8.y5);
  os8.y4 = FxChain(os8.y4);  
  os8.y3 = FxChain(os8.y3);
  os8.y2 = FxChain(os8.y2);
  os8.y1 = FxChain(os8.y1);
  os8.y0 = FxChain(os8.y0);  
  spl0 = spl1 = os8.os_down8();

  ); 
  
slider1 == 8 ? (
//8x-8x(Min Phase)
  os8.os_up8(Gen());
  os8.y7 = FxChain(os8.y7);
  os8.y6 = FxChain(os8.y6);
  os8.y5 = FxChain(os8.y5);
  os8.y4 = FxChain(os8.y4);  
  os8.y3 = FxChain(os8.y3);
  os8.y2 = FxChain(os8.y2);
  os8.y1 = FxChain(os8.y1);
  os8.y0 = FxChain(os8.y0);  
  spl0 = spl1 = os8.os_down8minphase();

  );    
  
slider1 == 9 ? (
//4x-2xCascade
  os2.os_up2(Gen());
  
    os2a.os_up2( os2.y1 );
  
      os2a.y1 = FxChain(os2a.y1);
      os2a.y0 = FxChain(os2a.y0);
    
    os2.y1 = os2a.os_down2();
    
    os2a.os_up2( os2.y0 );

      os2a.y1 = FxChain(os2a.y1);
      os2a.y0 = FxChain(os2a.y0);
      
    os2.y0 = os2a.os_down2();        
   
  spl0 = spl1 = os2.os_down2();

  ); 
  
slider1 == 10 ? (
//8x-2xCascade
  os2.os_up2(Gen());
  
    os2a.os_up2( os2.y1 );
    
      os2b.os_up2( os2a.y1 );
  
        os2b.y1 = FxChain(os2b.y1);
        os2b.y0 = FxChain(os2b.y0);
      
      os2a.y1 = os2b.os_down2();
      
      os2b.os_up2( os2a.y0 );
  
        os2b.y1 = FxChain(os2b.y1);
        os2b.y0 = FxChain(os2b.y0);
      
      os2a.y0 = os2b.os_down2();      
    
    os2.y1 = os2a.os_down2();
    
    os2a.os_up2( os2.y0 );

      os2b.os_up2( os2a.y1 );
  
        os2b.y1 = FxChain(os2b.y1);
        os2b.y0 = FxChain(os2b.y0);
      
      os2a.y1 = os2b.os_down2();
      
      os2b.os_up2( os2a.y0 );
  
        os2b.y1 = FxChain(os2b.y1);
        os2b.y0 = FxChain(os2b.y0);
      
      os2a.y0 = os2b.os_down2();      
    
    os2.y0 = os2a.os_down2();        
   
  spl0 = spl1 = os2.os_down2();

  );    
       
  
@gfx 640 100
gfX_r=gfx_g=gfx_b=1;
gfx_x=gfx_y=4;
gfx_printf("]Project SR: %dhz (Nyquist %dhz)\n", srate, srate*.5); gfx_y+=2;
osc.sr != srate ? (
  gfX_r=1;gfx_g=.5;gfx_b=0;
  gfx_printf("]Osc SR: %dhz (Nyquist %dhz)\n", osc.sr, osc.sr*.5); gfx_y+=2;
);
maxHarmonics = osc.nbHarmonics%2 == 0 && slider5 == 1 ? osc.nbHarmonics -1 : osc.nbHarmonics;
maxFreq =  maxHarmonics*slider3;
maxFreq >= srate*factor*.5 ? (gfX_r=1;gfx_g=gfx_b=0;) : (gfX_r=0;gfx_g=1;gfx_b=0;);
gfx_printf("]Osc Freq Range: %dhz to %dhz\n", slider3, maxFreq);
